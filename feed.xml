<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2025-01-03T12:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2024-0433: Vulnerability in age</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0433.html</id><updated>2025-01-03T12:00:00+00:00</updated><category term="code-execution"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0433.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0433: Vulnerability in age"/><published>2025-01-03T12:00:00+00:00</published><summary xml:lang="en">Malicious plugin names, recipients, or identities can cause arbitrary binary execution</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/age/RUSTSEC-2024-0433.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/age/RUSTSEC-2024-0433.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0433&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0433
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Malicious plugin names, recipients, or identities can cause arbitrary binary execution&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-18&quot;&gt;
          December 18, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-01-03&quot;&gt;
          January  3, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/age.html&quot;&gt;age&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/age&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/code-execution.html&quot;&gt;code-execution&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-4fg7-vxc8-qx5w&quot;&gt;GHSA-4fg7-vxc8-qx5w&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w&quot;&gt;
              https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-32gq-x56h-299c&quot;&gt;GHSA-32gq-x56h-299c&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.1, &amp;lt;0.7.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.2, &amp;lt;0.8.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.2, &amp;lt;0.9.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.3, &amp;lt;0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.1, &amp;lt;0.11.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.11.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.6.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::Identity::default_for_plugin&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::Identity::from_str&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.6.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::IdentityPluginV1::new&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.6.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::Recipient::from_str&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.6.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::RecipientPluginV1::new&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.6.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;A plugin name containing a path separator may allow an attacker to execute an arbitrary
binary.&lt;/p&gt;
&lt;p&gt;Such a plugin name can be provided through an attacker-controlled input to the following
&lt;code&gt;age&lt;/code&gt; APIs when the &lt;code&gt;plugin&lt;/code&gt; feature flag is enabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.Identity.html#impl-FromStr-for-Identity&quot;&gt;&lt;code&gt;age::plugin::Identity::from_str&lt;/code&gt;&lt;/a&gt;
(or equivalently &lt;a href=&quot;https://doc.rust-lang.org/stable/core/primitive.str.html#method.parse&quot;&gt;&lt;code&gt;str::parse::&amp;lt;age::plugin::Identity&amp;gt;()&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.Identity.html#method.default_for_plugin&quot;&gt;&lt;code&gt;age::plugin::Identity::default_for_plugin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.IdentityPluginV1.html#method.new&quot;&gt;&lt;code&gt;age::plugin::IdentityPluginV1::new&lt;/code&gt;&lt;/a&gt;
(the &lt;code&gt;plugin_name&lt;/code&gt; argument)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.Recipient.html#impl-FromStr-for-Recipient&quot;&gt;&lt;code&gt;age::plugin::Recipient::from_str&lt;/code&gt;&lt;/a&gt;
(or equivalently &lt;a href=&quot;https://doc.rust-lang.org/stable/core/primitive.str.html#method.parse&quot;&gt;&lt;code&gt;str::parse::&amp;lt;age::plugin::Recipient&amp;gt;()&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.RecipientPluginV1.html#method.new&quot;&gt;&lt;code&gt;age::plugin::RecipientPluginV1::new&lt;/code&gt;&lt;/a&gt;
(the &lt;code&gt;plugin_name&lt;/code&gt; argument)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On UNIX systems, a directory matching &lt;code&gt;age-plugin-*&lt;/code&gt; needs to exist in the working
directory for the attack to succeed.&lt;/p&gt;
&lt;p&gt;The binary is executed with a single flag, either &lt;code&gt;--age-plugin=recipient-v1&lt;/code&gt; or
&lt;code&gt;--age-plugin=identity-v1&lt;/code&gt;. The standard input includes the recipient or identity string,
and the random file key (if encrypting) or the header of the file (if decrypting). The
format is constrained by the &lt;a href=&quot;https://c2sp.org/age-plugin&quot;&gt;age-plugin&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;An equivalent issue was fixed in &lt;a href=&quot;https://github.com/FiloSottile/age&quot;&gt;the reference Go implementation of age&lt;/a&gt;,
see advisory &lt;a href=&quot;https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c&quot;&gt;GHSA-32gq-x56h-299c&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to ⬡-49016 for reporting this issue.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0432: Vulnerability in rage</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0432.html</id><updated>2025-01-03T12:00:00+00:00</updated><category term="code-execution"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0432.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0432: Vulnerability in rage"/><published>2025-01-03T12:00:00+00:00</published><summary xml:lang="en">Malicious plugin names, recipients, or identities can cause arbitrary binary execution</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/rage/RUSTSEC-2024-0432.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/rage/RUSTSEC-2024-0432.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0432&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0432
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Malicious plugin names, recipients, or identities can cause arbitrary binary execution&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-18&quot;&gt;
          December 18, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-01-03&quot;&gt;
          January  3, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/rage.html&quot;&gt;rage&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/rage&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/code-execution.html&quot;&gt;code-execution&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-4fg7-vxc8-qx5w&quot;&gt;GHSA-4fg7-vxc8-qx5w&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w&quot;&gt;
              https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-32gq-x56h-299c&quot;&gt;GHSA-32gq-x56h-299c&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.1, &amp;lt;0.7.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.2, &amp;lt;0.8.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.2, &amp;lt;0.9.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.3, &amp;lt;0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.1, &amp;lt;0.11.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.11.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.6.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;A plugin name containing a path separator may allow an attacker to execute an arbitrary
binary.&lt;/p&gt;
&lt;p&gt;Such a plugin name can be provided to the &lt;code&gt;rage&lt;/code&gt; CLI through an attacker-controlled
recipient or identity string, or an attacker-controlled plugin name via the &lt;code&gt;-j&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;On UNIX systems, a directory matching &lt;code&gt;age-plugin-*&lt;/code&gt; needs to exist in the working
directory for the attack to succeed.&lt;/p&gt;
&lt;p&gt;The binary is executed with a single flag, either &lt;code&gt;--age-plugin=recipient-v1&lt;/code&gt; or
&lt;code&gt;--age-plugin=identity-v1&lt;/code&gt;. The standard input includes the recipient or identity string,
and the random file key (if encrypting) or the header of the file (if decrypting). The
format is constrained by the &lt;a href=&quot;https://c2sp.org/age-plugin&quot;&gt;age-plugin&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;An equivalent issue was fixed in &lt;a href=&quot;https://github.com/FiloSottile/age&quot;&gt;the reference Go implementation of age&lt;/a&gt;,
see advisory &lt;a href=&quot;https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c&quot;&gt;GHSA-32gq-x56h-299c&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to ⬡-49016 for reporting this issue.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0431: Unsoundness in xous</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0431.html</id><updated>2024-12-28T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0431.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0431: Unsoundness in xous"/><published>2024-12-28T12:00:00+00:00</published><summary xml:lang="en">Unsound usages of `core::slice::from_raw_parts`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/xous/RUSTSEC-2024-0431.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/xous/RUSTSEC-2024-0431.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0431&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0431
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unsound usages of &lt;code&gt;core::slice::from_raw_parts&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-23&quot;&gt;
          December 23, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-28&quot;&gt;
          December 28, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/xous.html&quot;&gt;xous&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/xous&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/betrusted-io/xous-core/issues/410&quot;&gt;
              https://github.com/betrusted-io/xous-core/issues/410
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/betrusted-io/xous-core/pull/411&quot;&gt;
              https://github.com/betrusted-io/xous-core/pull/411
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.51&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;xous::definitions::MemoryRange::as_slice&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.9.51&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;xous::definitions::MemoryRange::as_slice_mut&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.9.51&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;We consider &lt;code&gt;as_slice&lt;/code&gt; and &lt;code&gt;as_slice_mut&lt;/code&gt; unsound because: the pointer with any bit patterns could be cast to the slice of arbitrary types. The pointer could be created by unsafe new and deprecated &lt;code&gt;from_parts&lt;/code&gt;. We consider that &lt;code&gt;from_parts&lt;/code&gt; should be removed in latest version because it will help trigger unsoundness in &lt;code&gt;as_slice&lt;/code&gt;. With new declared as unsafe, &lt;code&gt;as_slice&lt;/code&gt; should also declared as unsafe.&lt;/p&gt;
&lt;p&gt;This was patched in by marking two functions as &lt;code&gt;unsafe&lt;/code&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0430: Vulnerability in magic-crypt</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0430.html</id><updated>2024-12-28T12:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0430.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0430: Vulnerability in magic-crypt"/><published>2024-12-28T12:00:00+00:00</published><summary xml:lang="en">Use of insecure cryptographic algorithms</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/magic-crypt/RUSTSEC-2024-0430.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/magic-crypt/RUSTSEC-2024-0430.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0430&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0430
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Use of insecure cryptographic algorithms&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-28&quot;&gt;
          December 28, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-28&quot;&gt;
          December 28, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/magic-crypt.html&quot;&gt;magic-crypt&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/magic-crypt&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/crypto-failure.html&quot;&gt;crypto-failure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/crypto.html&quot;&gt;#crypto&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/unsound.html&quot;&gt;#unsound&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/magiclen/rust-magiccrypt/issues/17&quot;&gt;
              https://github.com/magiclen/rust-magiccrypt/issues/17
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;This crate uses a number of cryptographic algorithms that are no longer
considered secure and it uses them in ways that do not guarantee the integrity
of the encrypted data.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MagicCrypt64&lt;/code&gt; uses the insecure DES block cipher in CBC mode without
authentication. This allows for practical brute force and padding oracle
attacks and does not protect the integrity of the encrypted data. Key and IV
are generated from user input using CRC64, which is not at all a key derivation
function.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MagicCrypt64&lt;/code&gt;, &lt;code&gt;MagicCrypt128&lt;/code&gt;, &lt;code&gt;MagicCrypt192&lt;/code&gt;, and &lt;code&gt;MagicCrypt256&lt;/code&gt; are all
vulnerable to padding-oracle attacks. None of them protect the integrity of the
ciphertext. Furthermore, none use password-based key derivation functions, even
though the key is intended to be generated from a password.&lt;/p&gt;
&lt;p&gt;Each of the implementations are unsound in that they use uninitialized memory
without &lt;code&gt;MaybeUninit&lt;/code&gt; or equivalent structures.&lt;/p&gt;
&lt;p&gt;For more information, visit the &lt;a href=&quot;https://github.com/magiclen/rust-magiccrypt/issues/17&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0429: Unsoundness in glib</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0429.html</id><updated>2024-12-23T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0429.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0429: Unsoundness in glib"/><published>2024-12-23T12:00:00+00:00</published><summary xml:lang="en">Unsoundness in `Iterator` and `DoubleEndedIterator` impls for `glib::VariantStrIter`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/glib/RUSTSEC-2024-0429.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/glib/RUSTSEC-2024-0429.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0429&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0429
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unsoundness in &lt;code&gt;Iterator&lt;/code&gt; and &lt;code&gt;DoubleEndedIterator&lt;/code&gt; impls for &lt;code&gt;glib::VariantStrIter&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-03-30&quot;&gt;
          March 30, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-23&quot;&gt;
          December 23, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/glib.html&quot;&gt;glib&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/glib&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/gtk-rs/gtk-rs-core/pull/1343&quot;&gt;
              https://github.com/gtk-rs/gtk-rs-core/pull/1343
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.15.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::last&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::next&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::next_back&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::nth&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::nth_back&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;code&gt;VariantStrIter::impl_get&lt;/code&gt; function (called internally by implementations of the &lt;code&gt;Iterator&lt;/code&gt; and &lt;code&gt;DoubleEndedIterator&lt;/code&gt; traits for this type) was unsound, resulting in undefined behaviour.&lt;/p&gt;
&lt;p&gt;An immutable reference &lt;code&gt;&amp;amp;p&lt;/code&gt; to a &lt;code&gt;*mut libc::c_char&lt;/code&gt; pointer initialized to &lt;code&gt;NULL&lt;/code&gt; was passed as an argument to a C function that that mutates the pointer behind &lt;code&gt;&amp;amp;p&lt;/code&gt; in-place (i.e. as an out-argument), which was unsound. After changes in recent versions of the Rust compiler, these unsound writes through &lt;code&gt;&amp;amp;p&lt;/code&gt; now seem to be completely disregarded when building the &lt;code&gt;glib&lt;/code&gt; crate with optimizations.&lt;/p&gt;
&lt;p&gt;This subsequently caused all calls of &lt;code&gt;VariantStrIter::impl_get&lt;/code&gt; to violate the safety requirements of the &lt;code&gt;std::ffi::CStr::from_ptr&lt;/code&gt; function - which requires its argument to be a valid pointer to a C-style string - resulting in crashes due to &lt;code&gt;NULL&lt;/code&gt; pointer dereferences.&lt;/p&gt;
&lt;p&gt;This was fixed by passing the out-argument pointer explitly as &lt;code&gt;&amp;amp;mut p&lt;/code&gt; instead of &lt;code&gt;&amp;amp;p&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This issue has been present since this code was initially added in &lt;code&gt;glib&lt;/code&gt; v0.15.0. The mismatch in mutability was likely missed (and not raised as an error by the compiler) because the C function wrapped by &lt;code&gt;VariantStrIter::impl_get&lt;/code&gt; is variadic (&lt;code&gt;glib_sys::g_variant_get_child&lt;/code&gt;), and the pointer in question is one of the variadic arguments.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0424: Unsoundness in libafl</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0424.html</id><updated>2024-12-22T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0424.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0424: Unsoundness in libafl"/><published>2024-12-22T12:00:00+00:00</published><summary xml:lang="en">Unsound usages of `core::slice::from_raw_parts_mut`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/libafl/RUSTSEC-2024-0424.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/libafl/RUSTSEC-2024-0424.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0424&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0424
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unsound usages of &lt;code&gt;core::slice::from_raw_parts_mut&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-19&quot;&gt;
          December 19, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-22&quot;&gt;
          December 22, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/libafl.html&quot;&gt;libafl&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/libafl&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/align.html&quot;&gt;#align&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/AFLplusplus/LibAFL/issues/1526&quot;&gt;
              https://github.com/AFLplusplus/LibAFL/issues/1526
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/AFLplusplus/LibAFL/pull/1530&quot;&gt;
              https://github.com/AFLplusplus/LibAFL/pull/1530
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.11.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;libafl::observers::map::HitcountsMapObserver::post_exec&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.11.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The library breaks the safety assumptions when using unsafe API &lt;code&gt;slice::from_raw_parts_mut&lt;/code&gt;. The pointer passed to &lt;code&gt;from_raw_parts_mut&lt;/code&gt; is misaligned by casting &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;u16&lt;/code&gt; raw pointer directly, which is unsound. The bug is patched by using &lt;code&gt;align_offset&lt;/code&gt;, which could make sure the memory address is aligned to 2 bytes for &lt;code&gt;u16&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This was patched in 0.11.2 in the &lt;a href=&quot;https://github.com/AFLplusplus/LibAFL/pull/1530/commits/5a60cb31ef587d71d09d534bba39bd3973c4b35d&quot;&gt;commit&lt;/a&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0426: Unsoundness in spl-token-swap</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0426.html</id><updated>2024-12-22T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0426.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0426: Unsoundness in spl-token-swap"/><published>2024-12-22T12:00:00+00:00</published><summary xml:lang="en">Unsound usages of `u8` type casting</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/spl-token-swap/RUSTSEC-2024-0426.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/spl-token-swap/RUSTSEC-2024-0426.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0426&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0426
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unsound usages of &lt;code&gt;u8&lt;/code&gt; type casting&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-19&quot;&gt;
          December 19, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-22&quot;&gt;
          December 22, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/spl-token-swap.html&quot;&gt;spl-token-swap&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/spl-token-swap&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/align.html&quot;&gt;#align&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/solana-labs/solana-program-library/issues/5243&quot;&gt;
              https://github.com/solana-labs/solana-program-library/issues/5243
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;spl_token_swap::instruction::unpack&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=3.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The library provides a safe public API &lt;code&gt;unpack&lt;/code&gt; to cast &lt;code&gt;u8&lt;/code&gt; array to arbitrary types, which can cause to undefined behaviors. The length check of array can only prevent out-of-bound access on the return type. However, it can&apos;t prevent misaligned pointer when casting &lt;code&gt;u8&lt;/code&gt; pointer to a type aligned to larger bytes. For example, if we assign &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;T&lt;/code&gt;, &lt;strong&gt;misaligned raw pointer dereference&lt;/strong&gt; could happen and cause to panic. Even if we pass the type aligned to same byte as &lt;code&gt;u8&lt;/code&gt; (e.g., &lt;code&gt;bool&lt;/code&gt;), it could construct a illegal type since &lt;code&gt;bool&lt;/code&gt; can only have 0 or 1 as bit patterns, which is also an undefined behavior. The further exploits of the bug here are still not clear, so we would report this issue as unsound.&lt;/p&gt;
&lt;p&gt;The details of PoC to reproduce undefined behavior are provided in the &lt;a href=&quot;https://github.com/solana-labs/solana-program-library/issues/5243&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0427: get-size-derive is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0427.html</id><updated>2024-12-22T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0427.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0427: get-size-derive is unmaintained"/><published>2024-12-22T12:00:00+00:00</published><summary xml:lang="en">get-size-derive is unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/get-size-derive/RUSTSEC-2024-0427.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/get-size-derive/RUSTSEC-2024-0427.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0427&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0427
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;get-size-derive is unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-15&quot;&gt;
          September 15, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-22&quot;&gt;
          December 22, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/get-size-derive.html&quot;&gt;get-size-derive&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/get-size-derive&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/DKerp/get-size/issues/22&quot;&gt;
              https://github.com/DKerp/get-size/issues/22
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;get-size-derive&apos;s maintainer seems to be unreachable, with no commits and releases pushed for 1 year and no activity on the GitHub repo.&lt;/p&gt;
&lt;p&gt;get-size-derive also depends on &lt;code&gt;attribute-derive ^0.6&lt;/code&gt; a version of the crate which uses the yanked crate &lt;code&gt;proc-macro-error&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Possible Alternative(s)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/get-size-derive2&quot;&gt;get-size-derive2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0425: get-size is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0425.html</id><updated>2024-12-22T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0425.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0425: get-size is unmaintained"/><published>2024-12-22T12:00:00+00:00</published><summary xml:lang="en">get-size is unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/get-size/RUSTSEC-2024-0425.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/get-size/RUSTSEC-2024-0425.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0425&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0425
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;get-size is unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-15&quot;&gt;
          September 15, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-22&quot;&gt;
          December 22, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/get-size.html&quot;&gt;get-size&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/get-size&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/DKerp/get-size/issues/22&quot;&gt;
              https://github.com/DKerp/get-size/issues/22
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;get-size&apos;s maintainer seems to be unreachable, with no commits and releases pushed for 1 year and no activity on the GitHub repo.&lt;/p&gt;
&lt;p&gt;get-size also depends on &lt;code&gt;get-size-derive 0.1.3&lt;/code&gt;, which uses &lt;code&gt;attribute-derive ^0.6&lt;/code&gt; a version of the crate which uses the yanked crate &lt;code&gt;proc-macro-error&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Possible Alternative(s)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/get-size2&quot;&gt;get-size2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/typesize&quot;&gt;typesize&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0428: Unsoundness in kvm-ioctls</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0428.html</id><updated>2024-12-22T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0428.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0428: Unsoundness in kvm-ioctls"/><published>2024-12-22T12:00:00+00:00</published><summary xml:lang="en">Undefined behaviour in `kvm_ioctls::ioctls::vm::VmFd::create_device`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/kvm-ioctls/RUSTSEC-2024-0428.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/kvm-ioctls/RUSTSEC-2024-0428.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0428&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0428
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Undefined behaviour in &lt;code&gt;kvm_ioctls::ioctls::vm::VmFd::create_device&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-05&quot;&gt;
          December  5, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-22&quot;&gt;
          December 22, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/kvm-ioctls.html&quot;&gt;kvm-ioctls&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/kvm-ioctls&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/unsound.html&quot;&gt;#unsound&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/1-82.html&quot;&gt;#1-82&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/rust-vmm/kvm/pull/298&quot;&gt;
              https://github.com/rust-vmm/kvm/pull/298
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.19.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      &lt;dt&gt;Affected OSes&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;linux&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;kvm_ioctls::ioctls::vm::VmFd::create_device&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=0.19.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;An issue was identified in the &lt;code&gt;VmFd::create_device function&lt;/code&gt;, leading to undefined behavior and miscompilations on rustc 1.82.0 and newer due to the function&apos;s violation of Rust&apos;s pointer safety rules.&lt;/p&gt;
&lt;p&gt;The function downcasted a mutable reference to its &lt;code&gt;struct kvm_create_device&lt;/code&gt; argument to an immutable pointer, and then proceeded to pass this pointer to a mutating system call. Rustc 1.82.0 and newer elides subsequent reads of this structure&apos;s fields, meaning code will not see the value written by the kernel into the &lt;code&gt;fd&lt;/code&gt; member. Instead, the code will observe the value that this field was initialized to prior to calling &lt;code&gt;VmFd::create_device&lt;/code&gt; (usually, 0).&lt;/p&gt;
&lt;p&gt;The issue started in kvm-ioctls 0.1.0 and was fixed in 0.19.1 by correctly using
a mutable pointer.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry></feed>