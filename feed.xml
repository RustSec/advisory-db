<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2025-01-22T12:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2024-0434: Security notice about matrix-sdk-crypto</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0434.html</id><updated>2025-01-22T12:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0434.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0434: Security notice about matrix-sdk-crypto"/><published>2025-01-22T12:00:00+00:00</published><summary xml:lang="en"> Missing facility to signal rotation of a verified cryptographic identity</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/matrix-sdk-crypto/RUSTSEC-2024-0434.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/matrix-sdk-crypto/RUSTSEC-2024-0434.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0434&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0434
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Missing facility to signal rotation of a verified cryptographic identity&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-07&quot;&gt;
          January  7, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-01-22&quot;&gt;
          January 22, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/matrix-sdk-crypto.html&quot;&gt;matrix-sdk-crypto&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/matrix-sdk-crypto&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Notice
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/crypto-failure.html&quot;&gt;crypto-failure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-52813&quot;&gt;CVE-2024-52813&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-r5vf-wf4h-82gg&quot;&gt;GHSA-r5vf-wf4h-82gg&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/matrix-org/matrix-rust-sdk/security/advisories/GHSA-r5vf-wf4h-82gg&quot;&gt;
              https://github.com/matrix-org/matrix-rust-sdk/security/advisories/GHSA-r5vf-wf4h-82gg
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Versions of the matrix-sdk-crypto Rust crate before 0.8.0 lack a dedicated
mechanism to notify that a user&apos;s cryptographic identity has changed from a
verified to an unverified one, which could cause client applications relying on
the SDK to overlook such changes.&lt;/p&gt;
&lt;p&gt;matrix-sdk-crypto 0.8.0 adds a new &lt;code&gt;VerificationLevel::VerificationViolation&lt;/code&gt;
enum variant which indicates that a previously verified identity has been
changed.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2025-0001: Vulnerability in gix-worktree-state</title><id>https://rustsec.org/advisories/RUSTSEC-2025-0001.html</id><updated>2025-01-22T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2025-0001.html" rel="alternate" type="text/html" title="RUSTSEC-2025-0001: Vulnerability in gix-worktree-state"/><published>2025-01-18T12:00:00+00:00</published><summary xml:lang="en">gix-worktree-state nonexclusive checkout sets executable files world-writable</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/gix-worktree-state/RUSTSEC-2025-0001.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/gix-worktree-state/RUSTSEC-2025-0001.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2025-0001&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2025-0001
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;gix-worktree-state nonexclusive checkout sets executable files world-writable&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-01-18&quot;&gt;
          January 18, 2025
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-01-18&quot;&gt;
          January 18, 2025
        &lt;/time&gt;
        
        &lt;time datetime=&quot;2025-01-22&quot;&gt;
          (last modified: January 22, 2025)
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/gix-worktree-state.html&quot;&gt;gix-worktree-state&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/gix-worktree-state&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/permissions.html&quot;&gt;#permissions&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-22620&quot;&gt;CVE-2025-22620&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-fqmf-w4xh-33rh&quot;&gt;GHSA-fqmf-w4xh-33rh&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/security/advisories/GHSA-fqmf-w4xh-33rh&quot;&gt;
              https://github.com/GitoxideLabs/gitoxide/security/advisories/GHSA-fqmf-w4xh-33rh
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/advisories/GHSA-fqmf-w4xh-33rh&quot;&gt;
              https://github.com/advisories/GHSA-fqmf-w4xh-33rh
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2025-22620&quot;&gt;
              https://nvd.nist.gov/vuln/detail/CVE-2025-22620
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;5 &lt;span class=&quot;tag medium&quot;&gt;
        MEDIUM
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Local&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;Required&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:N&quot;&gt;CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:N&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.17.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;gix_worktree_state::checkout&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.17.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gix-worktree-state&lt;/code&gt; specifies 0777 permissions when checking out executable files, intending that the umask will restrict them appropriately. But one of the strategies it uses to set permissions is not subject to the umask. This causes files in a repository to be world-writable in some situations.&lt;/p&gt;
&lt;h3&gt;Details&lt;/h3&gt;
&lt;p&gt;Git repositories track executable bits for regular files. In tree objects and the index, regular file modes are stored as 0644 if not executable, or 0755 if executable. But this is independent of how the permissions are set in the filesystem (where supported).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/function.rs#L8-L35&quot;&gt;&lt;code&gt;gix_worktree_state::checkout&lt;/code&gt;&lt;/a&gt; has two strategies for checking out a file and marking it executable on a Unix-like operating system, one of which is vulnerable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the file is created by assuming it does not already exist, correct permissions are applied, because permissions specified when opening a file are subject to the umask.&lt;/li&gt;
&lt;li&gt;If the file is considered possibly already to exist—even in a clean checkout if the application does not specify the option to treat the destination directory as empty—then permissions conferring unrestricted access to any user account on the system are wrongly applied, because permissions specified when calling chmod on an existing file are not subject to the umask. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Specifically, &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/entry.rs#L56-L191&quot;&gt;&lt;code&gt;checkout::entry::checkout&lt;/code&gt;&lt;/a&gt; chooses the strategy for each file. The same strategy is usually chosen for each executable file, if no &lt;a href=&quot;https://github.com/git/git/blob/a60673e9252b08d4eca90543b3729f4798b9aafd/Documentation/RelNotes/2.11.0.txt#L149-L154&quot;&gt;process&lt;/a&gt; (i.e. &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/discussions/996&quot;&gt;long running&lt;/a&gt;) smudge filter is in use. The strategy depends on the &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/mod.rs#L50-L53&quot;&gt;&lt;code&gt;checkout::Options::destination_is_initially_empty&lt;/code&gt;&lt;/a&gt; value, which is passed along to &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/entry.rs#L253-L277&quot;&gt;&lt;code&gt;checkout::entry::open_file&lt;/code&gt;&lt;/a&gt;, whose return value includes a flag indicating whether permissions still need to be set:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;With &lt;code&gt;destination_is_initially_empty: true&lt;/code&gt;, executable permissions are specified when opening the file, via &lt;a href=&quot;https://doc.rust-lang.org/std/os/unix/fs/trait.OpenOptionsExt.html#tymethod.mode&quot;&gt;&lt;code&gt;OpenOptionsEx::mode&lt;/code&gt;&lt;/a&gt;, by its effect on the behavior of &lt;a href=&quot;https://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.open&quot;&gt;&lt;code&gt;OpenOptions::open&lt;/code&gt;&lt;/a&gt;. A mode of 0777 is safe here, for the same reason the default mode of 0666 is safe. When creating a file, the applied mode is the specified mode with any bits unset from it that are set in the umask.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/entry.rs#L265-L268&quot;&gt;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/entry.rs#L265-L268&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;set_executable_after_creation&lt;/code&gt; flag in the &lt;code&gt;open_file&lt;/code&gt; return value is then &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With &lt;code&gt;destination_is_initially_empty: false&lt;/code&gt;, executable permissions are set in a separate step, via &lt;a href=&quot;https://doc.rust-lang.org/beta/std/os/unix/fs/trait.PermissionsExt.html#tymethod.set_mode&quot;&gt;&lt;code&gt;PermissionsExt::set_mode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/beta/std/fs/fn.set_permissions.html&quot;&gt;&lt;code&gt;set_permissions&lt;/code&gt;&lt;/a&gt;. A mode of 0777 is not safe here, because the umask is not applied. The vulnerable code appears in &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/entry.rs#L279-L299&quot;&gt;&lt;code&gt;checkout::entry::finalize_entry&lt;/code&gt;&lt;/a&gt;, which receives the &lt;code&gt;set_executable_after_creation&lt;/code&gt; flag originally from &lt;code&gt;open_file&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/entry.rs#L288-L293&quot;&gt;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/entry.rs#L288-L293&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The file has unrestricted permissions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;finalize_entry&lt;/code&gt; is &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/chunk.rs#L229-L236&quot;&gt;likewise called&lt;/a&gt; from &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/chunk.rs#L157-L259&quot;&gt;&lt;code&gt;checkout::chunk::process_delayed_filter_results&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;PoC&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;On a Unix-like system such as GNU/Linux or macOS, create a new project and define its dependencies. While the vulnerability is in &lt;code&gt;gix-worktree-state&lt;/code&gt;, this example will use vulnerable code through the &lt;code&gt;gix&lt;/code&gt; crate, which exposes it. Run:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cargo new checkout-index
cd checkout-index
cargo add gix gix-object
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;code&gt;checkout-index&lt;/code&gt; directory, edit &lt;code&gt;src/main.rs&lt;/code&gt; so that its entire contents are:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;fn main() -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt; {
    let repo = gix::discover(&amp;quot;has-executable&amp;quot;)?;
    let mut index = repo.open_index()?;
    gix::worktree::state::checkout(
        &amp;amp;mut index,
        repo.work_dir().ok_or(&amp;quot;need non-bare repo&amp;quot;)?,
        gix_object::find::Never, // Can also use: repo.objects.clone()
        &amp;amp;gix::progress::Discard,
        &amp;amp;gix::progress::Discard,
        &amp;amp;Default::default(),
        Default::default(),
    )?;
    Ok(())
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the test repository that the vulnerable program will operate on. Still in the &lt;code&gt;checkout-index&lt;/code&gt; directory, run:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git init has-executable
touch has-executable/a has-executable/b
chmod +x has-executable/b
git -C has-executable add .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is not necessary to commit the changes, only to stage them, since the test program will check  out the index.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Optionally&lt;/em&gt;, run &lt;code&gt;rm has-executable/[ab]&lt;/code&gt; to remove the staged files from disk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the program by issuing &lt;code&gt;cargo run&lt;/code&gt;. The program uses &lt;code&gt;gix-worktree-state&lt;/code&gt; to check out the index. It should terminate successfully and not issue any errors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;ls -l has-executable&lt;/code&gt; to inspect the permissions of the checked out files. Observe that owner, group, and other all have read, write, and execute permissions on &lt;code&gt;b&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;-rw-r--r-- 1 ek ek 0 Jan  9 03:38 a
-rwxrwxrwx 1 ek ek 0 Jan  9 03:38 b
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With affected versions of &lt;code&gt;gix-worktree-state&lt;/code&gt;, the output shows &lt;code&gt;-rwxrwxrwx&lt;/code&gt; for &lt;code&gt;b&lt;/code&gt;, whether the files were removed in step 4 or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It was not necessary to set &lt;code&gt;destination_is_initially_empty&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; explicitly to trigger the bug, because that is its default value. If desired, modify the program to pass &lt;code&gt;true&lt;/code&gt; and rerun the experiment to verify that &lt;code&gt;b&lt;/code&gt; is no longer created with excessive permissions. The modified program would change the last &lt;code&gt;checkout&lt;/code&gt; argument from &lt;code&gt;Default::default(),&lt;/code&gt; to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;        gix::worktree::state::checkout::Options {
            destination_is_initially_empty: true,
            ..Default::default()
        },
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;Setting unlimited file permissions is a problem on systems where a user account exists on the system that should not have the ability to access and modify the files. That applies to multi-user systems, or when an account is used to run software with reduced abilities. (Some programs may also treat broad write permissions to mean less validation is required.)&lt;/p&gt;
&lt;p&gt;This bug affects Unix-like systems but not Windows. The &lt;code&gt;gix clone&lt;/code&gt; command is not believed to be affected, due to &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/af704f57bb9480c47cdd393465264d586f1d4562/gitoxide-core/src/index/checkout.rs#L14-L172&quot;&gt;&lt;code&gt;checkout_exclusive&lt;/code&gt;&lt;/a&gt;&apos;s &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/af704f57bb9480c47cdd393465264d586f1d4562/gitoxide-core/src/index/checkout.rs#L61&quot;&gt;use&lt;/a&gt; of &lt;code&gt;destination_is_initially_empty: true&lt;/code&gt;. Specialized uses in which repositories are known never to have any files marked executable are unaffected. Repositories that no untrusted users can access, due to not having the ability to traverse the directories to them or due to sufficiently restrictive ACLs, are likewise unaffected.&lt;/p&gt;
&lt;p&gt;The default value of &lt;code&gt;destination_is_initially_empty&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, so some applications may be affected even if they don&apos;t attempt checkouts in nonempty directories. The 0777 permissions are applied to files that are created earlier in the same checkout, as well as those that already existed, regardless of their prior permissions. On preexisting files, 0777 is set &lt;em&gt;even if &lt;a href=&quot;https://github.com/GitoxideLabs/gitoxide/blob/8d84818240d44e1f5fe78a231b5d9bffd0283918/gix-worktree-state/src/checkout/mod.rs#L54-L58&quot;&gt;&lt;code&gt;overwrite_existing&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;&lt;/em&gt;, as that prevents the checkout from changing file contents but not permissions.&lt;/p&gt;
&lt;p&gt;Files not tracked/staged as executable are not checked out with insecure permissions. Such a file that previously existed keeps its old permissions. However, this may include executable permissions that no longer match repository metadata, as well as undesired write permissions acquired from a previous vulnerable checkout. &lt;code&gt;set_mode(0o777)&lt;/code&gt; clears other bits, so the bug is not exacerbated by the presence of setuid/setgid bits. In some applications, the vulnerable strategy may be used only for files rewritten by a &lt;a href=&quot;https://git-scm.com/docs/gitattributes/2.40.0#_long_running_filter_process&quot;&gt;long running&lt;/a&gt; smudge filter or only in the presence of &lt;a href=&quot;https://git-scm.com/docs/gitattributes/2.40.0#_delay&quot;&gt;delays&lt;/a&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0432: Vulnerability in rage</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0432.html</id><updated>2025-01-03T12:00:00+00:00</updated><category term="code-execution"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0432.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0432: Vulnerability in rage"/><published>2025-01-03T12:00:00+00:00</published><summary xml:lang="en">Malicious plugin names, recipients, or identities can cause arbitrary binary execution</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/rage/RUSTSEC-2024-0432.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/rage/RUSTSEC-2024-0432.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0432&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0432
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Malicious plugin names, recipients, or identities can cause arbitrary binary execution&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-18&quot;&gt;
          December 18, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-01-03&quot;&gt;
          January  3, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/rage.html&quot;&gt;rage&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/rage&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/code-execution.html&quot;&gt;code-execution&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-4fg7-vxc8-qx5w&quot;&gt;GHSA-4fg7-vxc8-qx5w&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w&quot;&gt;
              https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-32gq-x56h-299c&quot;&gt;GHSA-32gq-x56h-299c&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.1, &amp;lt;0.7.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.2, &amp;lt;0.8.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.2, &amp;lt;0.9.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.3, &amp;lt;0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.1, &amp;lt;0.11.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.11.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.6.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;A plugin name containing a path separator may allow an attacker to execute an arbitrary
binary.&lt;/p&gt;
&lt;p&gt;Such a plugin name can be provided to the &lt;code&gt;rage&lt;/code&gt; CLI through an attacker-controlled
recipient or identity string, or an attacker-controlled plugin name via the &lt;code&gt;-j&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;On UNIX systems, a directory matching &lt;code&gt;age-plugin-*&lt;/code&gt; needs to exist in the working
directory for the attack to succeed.&lt;/p&gt;
&lt;p&gt;The binary is executed with a single flag, either &lt;code&gt;--age-plugin=recipient-v1&lt;/code&gt; or
&lt;code&gt;--age-plugin=identity-v1&lt;/code&gt;. The standard input includes the recipient or identity string,
and the random file key (if encrypting) or the header of the file (if decrypting). The
format is constrained by the &lt;a href=&quot;https://c2sp.org/age-plugin&quot;&gt;age-plugin&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;An equivalent issue was fixed in &lt;a href=&quot;https://github.com/FiloSottile/age&quot;&gt;the reference Go implementation of age&lt;/a&gt;,
see advisory &lt;a href=&quot;https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c&quot;&gt;GHSA-32gq-x56h-299c&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to ⬡-49016 for reporting this issue.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0433: Vulnerability in age</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0433.html</id><updated>2025-01-03T12:00:00+00:00</updated><category term="code-execution"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0433.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0433: Vulnerability in age"/><published>2025-01-03T12:00:00+00:00</published><summary xml:lang="en">Malicious plugin names, recipients, or identities can cause arbitrary binary execution</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/age/RUSTSEC-2024-0433.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/age/RUSTSEC-2024-0433.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0433&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0433
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Malicious plugin names, recipients, or identities can cause arbitrary binary execution&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-18&quot;&gt;
          December 18, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2025-01-03&quot;&gt;
          January  3, 2025
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/age.html&quot;&gt;age&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/age&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/code-execution.html&quot;&gt;code-execution&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-4fg7-vxc8-qx5w&quot;&gt;GHSA-4fg7-vxc8-qx5w&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w&quot;&gt;
              https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-32gq-x56h-299c&quot;&gt;GHSA-32gq-x56h-299c&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.1, &amp;lt;0.7.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.2, &amp;lt;0.8.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.2, &amp;lt;0.9.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.3, &amp;lt;0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.1, &amp;lt;0.11.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.11.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.6.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::Identity::default_for_plugin&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::Identity::from_str&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.6.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::IdentityPluginV1::new&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.6.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::Recipient::from_str&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.6.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;age::plugin::RecipientPluginV1::new&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.6.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.0, &amp;lt;0.8.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.3&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.10.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.11.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;A plugin name containing a path separator may allow an attacker to execute an arbitrary
binary.&lt;/p&gt;
&lt;p&gt;Such a plugin name can be provided through an attacker-controlled input to the following
&lt;code&gt;age&lt;/code&gt; APIs when the &lt;code&gt;plugin&lt;/code&gt; feature flag is enabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.Identity.html#impl-FromStr-for-Identity&quot;&gt;&lt;code&gt;age::plugin::Identity::from_str&lt;/code&gt;&lt;/a&gt;
(or equivalently &lt;a href=&quot;https://doc.rust-lang.org/stable/core/primitive.str.html#method.parse&quot;&gt;&lt;code&gt;str::parse::&amp;lt;age::plugin::Identity&amp;gt;()&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.Identity.html#method.default_for_plugin&quot;&gt;&lt;code&gt;age::plugin::Identity::default_for_plugin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.IdentityPluginV1.html#method.new&quot;&gt;&lt;code&gt;age::plugin::IdentityPluginV1::new&lt;/code&gt;&lt;/a&gt;
(the &lt;code&gt;plugin_name&lt;/code&gt; argument)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.Recipient.html#impl-FromStr-for-Recipient&quot;&gt;&lt;code&gt;age::plugin::Recipient::from_str&lt;/code&gt;&lt;/a&gt;
(or equivalently &lt;a href=&quot;https://doc.rust-lang.org/stable/core/primitive.str.html#method.parse&quot;&gt;&lt;code&gt;str::parse::&amp;lt;age::plugin::Recipient&amp;gt;()&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rs/age/0.11.0/age/plugin/struct.RecipientPluginV1.html#method.new&quot;&gt;&lt;code&gt;age::plugin::RecipientPluginV1::new&lt;/code&gt;&lt;/a&gt;
(the &lt;code&gt;plugin_name&lt;/code&gt; argument)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On UNIX systems, a directory matching &lt;code&gt;age-plugin-*&lt;/code&gt; needs to exist in the working
directory for the attack to succeed.&lt;/p&gt;
&lt;p&gt;The binary is executed with a single flag, either &lt;code&gt;--age-plugin=recipient-v1&lt;/code&gt; or
&lt;code&gt;--age-plugin=identity-v1&lt;/code&gt;. The standard input includes the recipient or identity string,
and the random file key (if encrypting) or the header of the file (if decrypting). The
format is constrained by the &lt;a href=&quot;https://c2sp.org/age-plugin&quot;&gt;age-plugin&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;An equivalent issue was fixed in &lt;a href=&quot;https://github.com/FiloSottile/age&quot;&gt;the reference Go implementation of age&lt;/a&gt;,
see advisory &lt;a href=&quot;https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c&quot;&gt;GHSA-32gq-x56h-299c&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to ⬡-49016 for reporting this issue.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0430: Vulnerability in magic-crypt</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0430.html</id><updated>2024-12-28T12:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0430.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0430: Vulnerability in magic-crypt"/><published>2024-12-28T12:00:00+00:00</published><summary xml:lang="en">Use of insecure cryptographic algorithms</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/magic-crypt/RUSTSEC-2024-0430.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/magic-crypt/RUSTSEC-2024-0430.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0430&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0430
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Use of insecure cryptographic algorithms&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-28&quot;&gt;
          December 28, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-28&quot;&gt;
          December 28, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/magic-crypt.html&quot;&gt;magic-crypt&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/magic-crypt&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/crypto-failure.html&quot;&gt;crypto-failure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/crypto.html&quot;&gt;#crypto&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/unsound.html&quot;&gt;#unsound&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/magiclen/rust-magiccrypt/issues/17&quot;&gt;
              https://github.com/magiclen/rust-magiccrypt/issues/17
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;This crate uses a number of cryptographic algorithms that are no longer
considered secure and it uses them in ways that do not guarantee the integrity
of the encrypted data.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MagicCrypt64&lt;/code&gt; uses the insecure DES block cipher in CBC mode without
authentication. This allows for practical brute force and padding oracle
attacks and does not protect the integrity of the encrypted data. Key and IV
are generated from user input using CRC64, which is not at all a key derivation
function.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MagicCrypt64&lt;/code&gt;, &lt;code&gt;MagicCrypt128&lt;/code&gt;, &lt;code&gt;MagicCrypt192&lt;/code&gt;, and &lt;code&gt;MagicCrypt256&lt;/code&gt; are all
vulnerable to padding-oracle attacks. None of them protect the integrity of the
ciphertext. Furthermore, none use password-based key derivation functions, even
though the key is intended to be generated from a password.&lt;/p&gt;
&lt;p&gt;Each of the implementations are unsound in that they use uninitialized memory
without &lt;code&gt;MaybeUninit&lt;/code&gt; or equivalent structures.&lt;/p&gt;
&lt;p&gt;For more information, visit the &lt;a href=&quot;https://github.com/magiclen/rust-magiccrypt/issues/17&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0431: Unsoundness in xous</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0431.html</id><updated>2024-12-28T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0431.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0431: Unsoundness in xous"/><published>2024-12-28T12:00:00+00:00</published><summary xml:lang="en">Unsound usages of `core::slice::from_raw_parts`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/xous/RUSTSEC-2024-0431.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/xous/RUSTSEC-2024-0431.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0431&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0431
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unsound usages of &lt;code&gt;core::slice::from_raw_parts&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-23&quot;&gt;
          December 23, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-28&quot;&gt;
          December 28, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/xous.html&quot;&gt;xous&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/xous&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/betrusted-io/xous-core/issues/410&quot;&gt;
              https://github.com/betrusted-io/xous-core/issues/410
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/betrusted-io/xous-core/pull/411&quot;&gt;
              https://github.com/betrusted-io/xous-core/pull/411
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.51&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;xous::definitions::MemoryRange::as_slice&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.9.51&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;xous::definitions::MemoryRange::as_slice_mut&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.9.51&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;We consider &lt;code&gt;as_slice&lt;/code&gt; and &lt;code&gt;as_slice_mut&lt;/code&gt; unsound because: the pointer with any bit patterns could be cast to the slice of arbitrary types. The pointer could be created by unsafe new and deprecated &lt;code&gt;from_parts&lt;/code&gt;. We consider that &lt;code&gt;from_parts&lt;/code&gt; should be removed in latest version because it will help trigger unsoundness in &lt;code&gt;as_slice&lt;/code&gt;. With new declared as unsafe, &lt;code&gt;as_slice&lt;/code&gt; should also declared as unsafe.&lt;/p&gt;
&lt;p&gt;This was patched in by marking two functions as &lt;code&gt;unsafe&lt;/code&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0429: Unsoundness in glib</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0429.html</id><updated>2024-12-23T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0429.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0429: Unsoundness in glib"/><published>2024-12-23T12:00:00+00:00</published><summary xml:lang="en">Unsoundness in `Iterator` and `DoubleEndedIterator` impls for `glib::VariantStrIter`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/glib/RUSTSEC-2024-0429.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/glib/RUSTSEC-2024-0429.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0429&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0429
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unsoundness in &lt;code&gt;Iterator&lt;/code&gt; and &lt;code&gt;DoubleEndedIterator&lt;/code&gt; impls for &lt;code&gt;glib::VariantStrIter&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-03-30&quot;&gt;
          March 30, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-23&quot;&gt;
          December 23, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/glib.html&quot;&gt;glib&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/glib&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/gtk-rs/gtk-rs-core/pull/1343&quot;&gt;
              https://github.com/gtk-rs/gtk-rs-core/pull/1343
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.15.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::last&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::next&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::next_back&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::nth&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;glib::VariantStrIter::nth_back&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.0, &amp;lt;0.20.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;code&gt;VariantStrIter::impl_get&lt;/code&gt; function (called internally by implementations of the &lt;code&gt;Iterator&lt;/code&gt; and &lt;code&gt;DoubleEndedIterator&lt;/code&gt; traits for this type) was unsound, resulting in undefined behaviour.&lt;/p&gt;
&lt;p&gt;An immutable reference &lt;code&gt;&amp;amp;p&lt;/code&gt; to a &lt;code&gt;*mut libc::c_char&lt;/code&gt; pointer initialized to &lt;code&gt;NULL&lt;/code&gt; was passed as an argument to a C function that that mutates the pointer behind &lt;code&gt;&amp;amp;p&lt;/code&gt; in-place (i.e. as an out-argument), which was unsound. After changes in recent versions of the Rust compiler, these unsound writes through &lt;code&gt;&amp;amp;p&lt;/code&gt; now seem to be completely disregarded when building the &lt;code&gt;glib&lt;/code&gt; crate with optimizations.&lt;/p&gt;
&lt;p&gt;This subsequently caused all calls of &lt;code&gt;VariantStrIter::impl_get&lt;/code&gt; to violate the safety requirements of the &lt;code&gt;std::ffi::CStr::from_ptr&lt;/code&gt; function - which requires its argument to be a valid pointer to a C-style string - resulting in crashes due to &lt;code&gt;NULL&lt;/code&gt; pointer dereferences.&lt;/p&gt;
&lt;p&gt;This was fixed by passing the out-argument pointer explitly as &lt;code&gt;&amp;amp;mut p&lt;/code&gt; instead of &lt;code&gt;&amp;amp;p&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This issue has been present since this code was initially added in &lt;code&gt;glib&lt;/code&gt; v0.15.0. The mismatch in mutability was likely missed (and not raised as an error by the compiler) because the C function wrapped by &lt;code&gt;VariantStrIter::impl_get&lt;/code&gt; is variadic (&lt;code&gt;glib_sys::g_variant_get_child&lt;/code&gt;), and the pointer in question is one of the variadic arguments.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0426: Unsoundness in spl-token-swap</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0426.html</id><updated>2024-12-22T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0426.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0426: Unsoundness in spl-token-swap"/><published>2024-12-22T12:00:00+00:00</published><summary xml:lang="en">Unsound usages of `u8` type casting</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/spl-token-swap/RUSTSEC-2024-0426.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/spl-token-swap/RUSTSEC-2024-0426.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0426&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0426
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unsound usages of &lt;code&gt;u8&lt;/code&gt; type casting&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-19&quot;&gt;
          December 19, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-22&quot;&gt;
          December 22, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/spl-token-swap.html&quot;&gt;spl-token-swap&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/spl-token-swap&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/align.html&quot;&gt;#align&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/solana-labs/solana-program-library/issues/5243&quot;&gt;
              https://github.com/solana-labs/solana-program-library/issues/5243
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;spl_token_swap::instruction::unpack&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=3.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The library provides a safe public API &lt;code&gt;unpack&lt;/code&gt; to cast &lt;code&gt;u8&lt;/code&gt; array to arbitrary types, which can cause to undefined behaviors. The length check of array can only prevent out-of-bound access on the return type. However, it can&apos;t prevent misaligned pointer when casting &lt;code&gt;u8&lt;/code&gt; pointer to a type aligned to larger bytes. For example, if we assign &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;T&lt;/code&gt;, &lt;strong&gt;misaligned raw pointer dereference&lt;/strong&gt; could happen and cause to panic. Even if we pass the type aligned to same byte as &lt;code&gt;u8&lt;/code&gt; (e.g., &lt;code&gt;bool&lt;/code&gt;), it could construct a illegal type since &lt;code&gt;bool&lt;/code&gt; can only have 0 or 1 as bit patterns, which is also an undefined behavior. The further exploits of the bug here are still not clear, so we would report this issue as unsound.&lt;/p&gt;
&lt;p&gt;The details of PoC to reproduce undefined behavior are provided in the &lt;a href=&quot;https://github.com/solana-labs/solana-program-library/issues/5243&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0427: get-size-derive is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0427.html</id><updated>2024-12-22T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0427.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0427: get-size-derive is unmaintained"/><published>2024-12-22T12:00:00+00:00</published><summary xml:lang="en">get-size-derive is unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/get-size-derive/RUSTSEC-2024-0427.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/get-size-derive/RUSTSEC-2024-0427.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0427&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0427
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;get-size-derive is unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-15&quot;&gt;
          September 15, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-22&quot;&gt;
          December 22, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/get-size-derive.html&quot;&gt;get-size-derive&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/get-size-derive&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/DKerp/get-size/issues/22&quot;&gt;
              https://github.com/DKerp/get-size/issues/22
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;get-size-derive&apos;s maintainer seems to be unreachable, with no commits and releases pushed for 1 year and no activity on the GitHub repo.&lt;/p&gt;
&lt;p&gt;get-size-derive also depends on &lt;code&gt;attribute-derive ^0.6&lt;/code&gt; a version of the crate which uses the yanked crate &lt;code&gt;proc-macro-error&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Possible Alternative(s)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/get-size-derive2&quot;&gt;get-size-derive2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0428: Unsoundness in kvm-ioctls</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0428.html</id><updated>2024-12-22T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0428.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0428: Unsoundness in kvm-ioctls"/><published>2024-12-22T12:00:00+00:00</published><summary xml:lang="en">Undefined behaviour in `kvm_ioctls::ioctls::vm::VmFd::create_device`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/kvm-ioctls/RUSTSEC-2024-0428.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/kvm-ioctls/RUSTSEC-2024-0428.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0428&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0428
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Undefined behaviour in &lt;code&gt;kvm_ioctls::ioctls::vm::VmFd::create_device&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-05&quot;&gt;
          December  5, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-12-22&quot;&gt;
          December 22, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/kvm-ioctls.html&quot;&gt;kvm-ioctls&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/kvm-ioctls&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/unsound.html&quot;&gt;#unsound&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/1-82.html&quot;&gt;#1-82&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/rust-vmm/kvm/pull/298&quot;&gt;
              https://github.com/rust-vmm/kvm/pull/298
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.19.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      &lt;dt&gt;Affected OSes&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;linux&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;kvm_ioctls::ioctls::vm::VmFd::create_device&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=0.19.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;An issue was identified in the &lt;code&gt;VmFd::create_device function&lt;/code&gt;, leading to undefined behavior and miscompilations on rustc 1.82.0 and newer due to the function&apos;s violation of Rust&apos;s pointer safety rules.&lt;/p&gt;
&lt;p&gt;The function downcasted a mutable reference to its &lt;code&gt;struct kvm_create_device&lt;/code&gt; argument to an immutable pointer, and then proceeded to pass this pointer to a mutating system call. Rustc 1.82.0 and newer elides subsequent reads of this structure&apos;s fields, meaning code will not see the value written by the kernel into the &lt;code&gt;fd&lt;/code&gt; member. Instead, the code will observe the value that this field was initialized to prior to calling &lt;code&gt;VmFd::create_device&lt;/code&gt; (usually, 0).&lt;/p&gt;
&lt;p&gt;The issue started in kvm-ioctls 0.1.0 and was fixed in 0.19.1 by correctly using
a mutable pointer.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry></feed>